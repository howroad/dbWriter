    /**
    * 新增$table{remark}
    * @param model $table{remark}实体
    * @author $common{author}
    * @return $table{remark}主键
    * @since $table{now}
    */
    public Integer save$table{entityName}($table{entityName} model) {
        return (Integer)getSqlMapClientTemplate().insert(getStatement("save$table{entityName}"),model);
    }
    
    /**
    * 根据主键删除$table{remark}
    * @param id $table{remark}主键
    * @author $common{author}
    * @since $table{now}
    */
    public void delete$table{entityName}ById (Integer id) {
        getSqlMapClientTemplate().delete(getStatement("delete$table{entityName}ById"),id);
    }
    
    /**
    * 修改$table{remark}
    * @param model $table{remark}实体
    * @author $common{author}
    * @since $table{now}
    */
    public void update$table{entityName}($table{entityName} model) {
        getSqlMapClientTemplate().update(getStatement("update$table{entityName}"),model);
    }
    
    /**
    * 查询$table{remark}列表
    * @param scope $table{remark}查询条件
    * @author $common{author}
    * @return $table{remark}集合
    * @since $table{now}
    */
    public List<$table{entityName}> get$table{entityName}List($table{entityName} scope) {
        List<?> list = getSqlMapClientTemplate().queryForList(getStatement("get$table{entityName}List"),scope);
        List<$table{entityName}> resultList = Arrays.asList(list.toArray(new $table{entityName}[0]));
        return resultList;
    }