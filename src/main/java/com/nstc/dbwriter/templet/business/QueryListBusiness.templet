package com.nstc.tps.business;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.nstc.tps.builder.AffairBuilder;
import com.nstc.tps.model.view.AffairView;
import com.nstc.tps.scope.AffairScope;
import com.nstc.util.BeanHelper;

/**
 * 查询事务申请
 * 
 * <p>Title: QueryAffairApplyTempBusiness.java</p>
 *
 * <p>Description: </p>
 *
 * <p>Company: 北京九恒星科技股份有限公司</p>
 *
 * @author luhao
 * 
 * @since：2019年1月11日 上午9:59:45
 *
 */
public class QueryAffairApplyTempBusiness extends AbstractAffairBusiness{
    
    private Map<String, Object> tps_affair_apply_temp_qry;
    private List<Map<String, Object>> tps_affair_apply_temp_list;
    
    @SuppressWarnings("unchecked")
    public void doExecute() {
        //初始化
        init();

        //查询
        AffairScope scope = AffairBuilder.buildAffairTempScope(tps_affair_apply_temp_qry,getProfile());
        List<AffairView> list = getLocator().getAffairService().getAffairTempList(scope);
        tps_affair_apply_temp_list = BeanHelper.describe(list);
        
        putResult("tps_affair_apply_temp_qry", tps_affair_apply_temp_qry);
        putResult("tps_affair_apply_temp_list", tps_affair_apply_temp_list);
    }

    public Map<String, Object> getTps_affair_apply_temp_qry() {
        return tps_affair_apply_temp_qry;
    }

    public void setTps_affair_apply_temp_qry(Map<String, Object> tps_affair_apply_temp_qry) {
        this.tps_affair_apply_temp_qry = tps_affair_apply_temp_qry;
    }


    public List<Map<String, Object>> getTps_affair_apply_temp_list() {
        return tps_affair_apply_temp_list;
    }

    public void setTps_affair_apply_temp_list(List<Map<String, Object>> tps_affair_apply_temp_list) {
        this.tps_affair_apply_temp_list = tps_affair_apply_temp_list;
    }
    /**
     * 初始化
     * @author luhao
     * @since：2019年1月14日 上午10:37:12
     */
    private void init() {
        if(tps_affair_apply_temp_qry == null) {
            tps_affair_apply_temp_qry = new HashMap<String, Object>(16);
        }
    }
}
