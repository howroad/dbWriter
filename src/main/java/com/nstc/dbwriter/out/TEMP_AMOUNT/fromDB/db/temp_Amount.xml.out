    <!-- 分页 start -->
    <sql id="pagingStartSql">
        <isNotNull property="paging">
            SELECT * FROM (SELECT N.*,ROWNUM AS R
            FROM (
        </isNotNull>
    </sql>
    <!-- 分页 end -->
    <sql id="pagingEndSql">
        <isNotNull property="paging">
            ) N ) T
            WHERE T.R > #paging.startRow#
            AND T.R <![CDATA[<=]]>
            (#paging.endRow#)
        </isNotNull>
    </sql>
    <!-- 查询 账户表公共SQL-->
    <sql id="queryAmountScopeSQL">
        FROM TEMP_AMOUNT T WHERE 1 = 1
        <isNotEmpty property="amountId" prepend="and">
            T.AMOUNT_ID = #amountId#
        </isNotEmpty>
        <isNotEmpty property="amountName" prepend="and">
            T.AMOUNT_NAME = #amountName#
        </isNotEmpty>
        <isNotEmpty property="amountBalence" prepend="and">
            T.AMOUNT_BALENCE = #amountBalence#
        </isNotEmpty>
        <isNotEmpty property="updateTime" prepend="and">
            T.UPDATE_TIME = #updateTime#
        </isNotEmpty>
        <isNotEmpty property="createPerson" prepend="and">
            T.CREATE_PERSON = #createPerson#
        </isNotEmpty>
        <isNotEmpty property="locked" prepend="and">
            T.LOCKED = #locked#
        </isNotEmpty>
    </sql>
       
    <!-- 新增账户表 -->
    <insert id="saveAmount" parameterClass="com.nstc.temp.model.Amount">
        <selectKey resultClass="java.lang.Integer" keyProperty="amountId">
            SELECT SEQ_TEMP_AMOUNT.NEXTVAL AS amountId FROM DUAL
        </selectKey>
        INSERT INTO TEMP_AMOUNT (
            AMOUNT_ID,
            AMOUNT_NAME,
            AMOUNT_BALENCE,
            UPDATE_TIME,
            CREATE_PERSON,
            LOCKED
        ) VALUES(
            #amountId#,
            #amountName#,
            #amountBalence#,
            #updateTime#,
            #createPerson#,
            #locked#
        )
    </insert>

    <!-- 根据Id删除账户表 -->
    <delete id="deleteAmountById" parameterClass="java.lang.Integer">
        delete TEMP_AMOUNT WHERE AMOUNT_ID = #amountId#
    </delete>

    <!-- 修改账户表 -->
    <update id="updateAmount" parameterClass="com.nstc.temp.model.Amount">
        UPDATE TEMP_AMOUNT SET
        AMOUNT_ID = #amountId#
        <isNotEmpty prepend="," property="amountName">
            AMOUNT_NAME = #amountName#
        </isNotEmpty>
        <isNotEmpty prepend="," property="amountBalence">
            AMOUNT_BALENCE = #amountBalence#
        </isNotEmpty>
        <isNotEmpty prepend="," property="updateTime">
            UPDATE_TIME = #updateTime#
        </isNotEmpty>
        <isNotEmpty prepend="," property="createPerson">
            CREATE_PERSON = #createPerson#
        </isNotEmpty>
        <isNotEmpty prepend="," property="locked">
            LOCKED = #locked#
        </isNotEmpty>
        WHERE AMOUNT_ID = #amountId#
    </update>

    <!-- 查询账户表列表 -->
    <select id="getAmountList" parameterClass="com.nstc.temp.model.Amount" resultClass="com.nstc.temp.model.Amount">
        SELECT
            T.AMOUNT_ID AS "amountId",
            T.AMOUNT_NAME AS "amountName",
            T.AMOUNT_BALENCE AS "amountBalence",
            T.UPDATE_TIME AS "updateTime",
            T.CREATE_PERSON AS "createPerson",
            T.LOCKED AS "locked"
        FROM TEMP_AMOUNT T WHERE 1 = 1
        <isNotEmpty property="amountId" prepend="and">
            T.AMOUNT_ID = #amountId#
        </isNotEmpty>
        <isNotEmpty property="amountName" prepend="and">
            T.AMOUNT_NAME = #amountName#
        </isNotEmpty>
        <isNotEmpty property="amountBalence" prepend="and">
            T.AMOUNT_BALENCE = #amountBalence#
        </isNotEmpty>
        <isNotEmpty property="updateTime" prepend="and">
            T.UPDATE_TIME = #updateTime#
        </isNotEmpty>
        <isNotEmpty property="createPerson" prepend="and">
            T.CREATE_PERSON = #createPerson#
        </isNotEmpty>
        <isNotEmpty property="locked" prepend="and">
            T.LOCKED = #locked#
        </isNotEmpty>
        ORDER BY T.AMOUNT_ID ASC
    </select>
    
    <!-- 根据Id查询账户表 -->
    <select id="getAmountById" parameterClass="java.lang.Integer" resultClass="com.nstc.temp.model.Amount">
        SELECT
            T.AMOUNT_ID AS "amountId",
            T.AMOUNT_NAME AS "amountName",
            T.AMOUNT_BALENCE AS "amountBalence",
            T.UPDATE_TIME AS "updateTime",
            T.CREATE_PERSON AS "createPerson",
            T.LOCKED AS "locked"
        FROM TEMP_AMOUNT T WHERE 
        T.AMOUNT_ID = #id#
        AND ROWNUM = 1
    </select>
    
    <!-- 根据Id删除账户表 -->
    <delete id="deleteAmountByIds" parameterClass="java.util.ArrayList">
        DELETE FROM TEMP_AMOUNT T WHERE  T.AMOUNT_ID IN
        <iterate open="(" close=")" conjunction=",">  
            #ids[]#  
        </iterate>
    </delete>   

    <!-- 查询账户表记录数 -->
    <select id="getAmountPageCount" parameterClass="com.nstc.temp.model.AmountScope" resultClass="java.lang.Integer">
        SELECT
            COUNT(0)
        <include refid="queryAmountScopeSQL" />
    </select>         
    
    <!-- 查询账户表分页列表 -->
    <select id="getAmountPageList" parameterClass="com.nstc.temp.model.AmountScope" resultClass="com.nstc.temp.model.Amount">
        <include refid="pagingStartSql" />
        SELECT
            T.AMOUNT_ID AS "amountId",
            T.AMOUNT_NAME AS "amountName",
            T.AMOUNT_BALENCE AS "amountBalence",
            T.UPDATE_TIME AS "updateTime",
            T.CREATE_PERSON AS "createPerson",
            T.LOCKED AS "locked"
        <include refid="queryAmountScopeSQL" />
        ORDER BY T.AMOUNT_ID ASC
        <include refid="pagingEndSql" />
    </select>
